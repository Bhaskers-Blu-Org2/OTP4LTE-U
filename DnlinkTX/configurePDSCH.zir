----------------------------------------------------------------------------------
--
-- MIT License
--
-- Copyright (c) 2016 Microsoft
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the "Software"), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
--
-- The above copyright notice and this permission notice shall be included in
-- all copies or substantial portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-- THE SOFTWARE.
--
----------------------------------------------------------------------------------

#pragma once
#include "definitions.zir"
#include "tbs_table.zir" 

fun configurePDSCH(ndlrb : int16, CellRefP : int16, dci : struct DCIParams, rnti : int32) {
var config : struct PDSCHParams;

  config.RNTI := rnti;
  -- PRBStart and PRBLen are indirectly populated from dlSCH.lenRB, dlSCH.startRB
  -- as RIV is initially created in configureDCI1A using dlSCH.lenRB and dlSCH.startRB
  config.PRBStart := dci.Allocation.RIV % ndlrb;
  config.PRBLen := dci.Allocation.RIV / ndlrb + 1;
  config.NLayers := CellRefP;
  config.Modulation := dci.Modulation;
  config.RV := dci.RV;
  config.TxScheme := PDSCH_TX_SCHEME_PORT_0;
  config.NTurboDecIts := 5;                                -- % arbitrary, from LST example code

  return config;
};
