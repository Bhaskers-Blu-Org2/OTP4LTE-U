----------------------------------------------------------------------------------
--
-- MIT License
--
-- Copyright (c) 2016 Microsoft
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the "Software"), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
--
-- The above copyright notice and this permission notice shall be included in
-- all copies or substantial portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-- THE SOFTWARE.
--
----------------------------------------------------------------------------------

#include <abs.blk>
#include "../definitions.zir"
#include "../addMIBToSubframe.zir"


-- This tests how much time it takes to prepare a SIB (a small PDSCH) packet
-- We send 1000 packets, so it should take much less than 1s 
-- (since each subframe carrying SIB should be entirely ready in 1ms)

fun comp test_genFrameFreq() {
var cellGrid : arr[10*NDLRB*12*14] complex16;
var frame : int16 := 0;

  let tx = configTX();

-- Add MIB and SIB, which actually depend on the frame
  for cnt in [0, 1000*10] {
      let subframe = 0;
      addMIBToSubframe(cellGrid[int32(subframe)*NDLRB*12*14, NDLRB*12*14], frame, subframe, tx);
      emits cellGrid[int32(subframe)*NDLRB*12*14, NDLRB*12*14];
    do {frame := (frame + 2) % 1024};
  }
};

let comp main = read[int] >>> test_genFrameFreq() >>> write
