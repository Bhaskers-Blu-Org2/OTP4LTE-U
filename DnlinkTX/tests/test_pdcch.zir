----------------------------------------------------------------------------------
--
-- MIT License
--
-- Copyright (c) 2016 Microsoft
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the "Software"), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
--
-- The above copyright notice and this permission notice shall be included in
-- all copies or substantial portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-- THE SOFTWARE.
--
----------------------------------------------------------------------------------

#include "../definitions.zir"
#include "../dcch.zir"
#include "../pdcch.zir"


fun comp test_dcch() {
var output : arr [MAX_BIT_MSG_SIZE] bit;
var tx : struct TXParams;
  do {
    tx := configTX();
    tx := initTXParams(tx);
  }
  x <- takes 27;
  emits dcch(x, 65500) >>> pdcch(0, 0, tx);
  emits dcch(x, 65500) >>> pdcch(0, 4, tx);
  emits dcch(x, 65500) >>> pdcch(0, 2, tx);
  emits dcch(x, 65500) >>> pdcch(0, 8, tx);
};

let comp main = read[bit] >>> test_dcch() >>> write


