----------------------------------------------------------------------------------
--
-- MIT License
--
-- Copyright (c) 2016 Microsoft
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the "Software"), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
--
-- The above copyright notice and this permission notice shall be included in
-- all copies or substantial portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-- THE SOFTWARE.
--
----------------------------------------------------------------------------------

--
-- Check LTE/MatlabTests/dft to see how ifft code has been generated
--
#include <externals.blk>
#include <abs.blk>

let comp main = read[complex16] >>> 
{ 
  x<-takes 12; emits sora_ifft(x);
  x<-takes 24; emits sora_ifft(x);
  x<-takes 48; emits sora_ifft(x);
  x<-takes 96; emits sora_ifft(x);
  x<-takes 192; emits sora_ifft(x);
  x<-takes 384; emits sora_ifft(x);
  x<-takes 768; emits sora_ifft(x);
} >>> 
repeat {
  (x : complex16) <- take;
  emit abs_int16(x.re)+20;
  emit abs_int16(x.im)+20;
} >>>  write[int16]

